using System;

class Conta {
    public int NumeroConta { get; private set; }
    public string Titular { get; set; }
    public double Saldo { get; protected set; }

    // Construtor
    public Conta(int numeroConta, string titular, double saldo) {
        NumeroConta = numeroConta;
        Titular = titular;
        Saldo = saldo;
    }

    // Método para realizar depósito
    public void Deposito(double valor) {
        Saldo += valor;
    }

    // Método para realizar saque
    public virtual void Saque(double valor) {
        if (valor <= Saldo) {
            Saldo -= valor;
            Console.WriteLine($"Saque de {valor.ToString("F2")} realizado com sucesso.");
        } else {
            Console.WriteLine("Saldo insuficiente para realizar o saque.");
        }
    }
}

class ContaEmpresa : Conta {
    public double LimiteEmprestimo { get; private set; }

    // Construtor
    public ContaEmpresa(int numeroConta, string titular, double saldo, double limiteEmprestimo) 
        : base(numeroConta, titular, saldo) {
        LimiteEmprestimo = limiteEmprestimo;
    }

    // Método para realizar empréstimo
    public void Emprestimo(double valor) {
        if (valor <= LimiteEmprestimo) {
            Saldo += valor;
            Console.WriteLine($"Empréstimo de {valor.ToString("F2")} realizado com sucesso.");
        } else {
            Console.WriteLine("Limite de empréstimo excedido.");
        }
    }

    // Sobrescreve o método Saque da classe base
    public override void Saque(double valor) {
        base.Saque(valor); // Chama o método Saque da classe base

        // Adiciona taxa adicional para saque em conta empresarial
        if (valor > 1000) {
            Saldo -= 10.0;
            Console.WriteLine("Taxa de saque de R$ 10.00 aplicada para conta empresarial.");
        }
    }
}

class Program {
    static void Main() {
        // Exemplo de uso
        Conta contaComum = new Conta(123, "João", 1000.0);
        ContaEmpresa contaEmpresa = new ContaEmpresa(456, "Empresa XYZ", 5000.0, 2000.0);

        // Operações com conta comum
        contaComum.Deposito(500.0);
        contaComum.Saque(200.0);

        // Operações com conta empresarial
        contaEmpresa.Deposito(1000.0);
        contaEmpresa.Saque(1500.0);
        contaEmpresa.Emprestimo(3000.0);
    }
}
